import sqlite3 as lite
import sys





def llegueix_usuaris():
    """
    agafa el document dades_usuaris.txt i els volca a la bd
    """
    
    f=open("dades_usuaris.txt","r");
    c=f.readlines()
    c2=[x.strip() for x in c]
    t=[]
    for element in c2:
        t.append(tuple(element.split(" ")))
    t2=tuple(t)
    #compte amb el salt de linea al final de usuaris.txt    
    cur.executemany("INSERT INTO usuaris VALUES(?,?,?,?,?,?)", t2)
    con.commit()
    f.close()

def guarda_usuaris():
    """
    agafa tots els usuaris que tenim a la bd i els guarda al txt
    """
    
    cur.execute("SELECT * FROM usuaris")
    files=cur.fetchall()
    f=open("dades_usuaris.txt","w")
    for fila in files:
        f.write("%s %s %s %s %s %s" % fila +"\n")
    f.close()

def llegueix_amistats():
    """
    agafa el document dades_amistats.txt i els volca a la bd
    """
    
    f=open("dades_amistats.txt","r");
    c=f.readlines()
    c2=[x.strip() for x in c]
    t=[]
    for element in c2:
        t.append(tuple(element.split(" ")))
    t2=tuple(t)
    #compte amb el salt de linea al final de usuaris.txt    
    cur.executemany("INSERT INTO amistats VALUES(?,?,?)", t2)
    con.commit()
    f.close()

def guarda_amistats():
    """
    agafa totes les amistats que tenim a la bd i els guarda al txt
    """
    
    cur.execute("SELECT * FROM amistats")
    files=cur.fetchall()
    f=open("dades_amistats.txt","w")
    for fila in files:
        f.write("%s %s %s" % fila +"\n")
    f.close()
    

def mostra_usuaris():
    """
    Mostra el nom i cognom de tots els usuaris que tenim
    """

    cur.execute("SELECT nom,cognom FROM usuaris")
    llista=cur.fetchall()
    for element in llista:
        print "%s %s" % element+"\n"
    return

def mostra_usuaris_personalitzat(l):
    pass

def mostra_amistats():

    cur.execute("SELECT * FROM amistats")
    llista=cur.fetchall()
    for element in llista:
        print "%s %s %s" % element+"\n"

def afegeix_usuari():
    nom=raw_input("Nom: ")
    cognom=raw_input("Cognom: ")
    email=raw_input("Email: ")
    ciutat=raw_input("ciutat: ")
    naixement=raw_input("Data: ")#format dd-mm-aaaa
    pwd=raw_input("Pwd: ")
    print naixement
    packet=(email,nom,cognom,ciutat,(naixement),pwd)
    print packet
    comanda="INSERT INTO usuaris VALUES('%s','%s','%s','%s',%s,'%s')" % packet
    cur.execute(comanda)
    guarda_usuaris()    
    return

def mostra_ciutat(city):
    """
    Mostra tots els usuaris que viuen a la ciutat tal
    """
    cur.execute("SELECT nom,cognom from usuaris WHERE poblacio = ?",(city,))
    resultat=cur.fetchall()
    for element in resultat:
        print "%s %s" % element+"\n"
    return

def mostra_edat(year):
    """
    Mostra tots els usuaris que tenen mes de x anys.
    PER FER
    """
    comanda="SELECT DataNaixament from usuaris"
    cur.execute(comanda)
    resultat=cur.fetchall()
    print resultat

def elimina_usuari(mail):
    #Parxe dolent, el execute no es menja res que no siguin tuples
    cur.execute("DELETE FROM usuaris WHERE email = ?",(mail,))
    con.commit()
    guarda_usuaris()
    #s'ha de afegir que si s'elimina el usuari l'amistat tambe despareix
    cur.execute("DELETE FROM amistats WHERE email1 = ? OR email2= ?",(mail,mail))
    #done
    return

def chng_pwd(mail,old_pwd,nw_pwd):
    cur.execute("SELECT pwd FROM usuaris WHERE email = ?",(mail,))
    resultat=cur.fetchall()
    contrasenya=resultat[0][0]
    if contrasenya==old_pwd:
        cur.execute("UPDATE usuaris SET pwd = ? WHERE email = ?",(nw_pwd,mail))
        con.commit()
        guarda_usuaris()
    else:
        print "Antic pwd incorrecte"

def chng_poblacio(mail,nw_pb):
    cur.execute("UPDATE usuaris SET poblacio = ? WHERE email = ?",(nw_pb,mail))
    con.commit()
    guarda_usuaris()

def envia_solicitud(mail1,mail2):
    """
    mail1 vol ser amic de mail2 (anira a pendent)
    """
    packet=(mail1,mail2,"Pendent")
    comanda="INSERT INTO amistats VALUES('%s','%s','%s')" % packet
    cur.execute(comanda)
    guarda_amistats()

def acepta_solicitud(mail1,mail2):
    """
    mail1 ESTEM CAIENT EN EL JOC DE QUI ACEPTA A QUI MAYDAY" acepta a mail2
    """
    #primer mirem que estigui pendent
    cur.execute("SELECT estat FROM amistats WHERE email1 = ? AND email2= ? ",(mail1,mail2))
    resultat=cur.fetchall()
    estat=resultat[0][0]

    if estat=="Pendent":
        cur.execute("UPDATE amistats SET estat='Aprovada' WHERE email1 = ? AND email2 = ?",(mail1,mail2))
        con.commit()
        guarda_amistats()

def rebutja_solicitud(mail1,mail2):
    """
    mail1 ESTEM CAIENT EN EL JOC DE QUI REBUTJA A QUI MAYDAY" rebutja a mail2
    """
    #primer mirem que estigui pendent

    cur.execute("SELECT estat FROM amistats WHERE email1 = ? AND email2= ? ",(mail1,mail2))
    resultat=cur.fetchall()
    estat=resultat[0][0]

    if estat=="Pendent":
        cur.execute("UPDATE amistats SET estat='Rebutjada' WHERE email1 = ? AND email2 = ?",(mail1,mail2))
        con.commit()
        guarda_amistats()


def amics(nom,cognom):
    """
    mostra els amics de la persona amb tal nom i cognom
    """
    cur.execute("SELECT nom,cognom FROM usuaris WHERE email in (SELECT (amistats.email2) FROM amistats, usuaris WHERE (usuaris.email=amistats.email1 AND  usuaris.nom=? and  usuaris.cognom=? and amistats.estat='Aprovada'))",(nom,cognom))
    resultat=cur.fetchall()
    for element in resultat:
        print "%s %s" % element+"\n"
    
    
def debug():
    comanda="SELECT * from amistats"
    cur.execute(comanda)
    resultat=cur.fetchall()
    print resultat


con=lite.connect("prova.db")
cur=con.cursor()
cur.executescript("""
    DROP TABLE IF EXISTS usuaris;
CREATE TABLE usuaris(email varchar(20),nom varchar(20),cognom varchar(20),poblacio varchar(20),dataNaixament date, pwd varchar(20));
""")
#em peta al crear dominis
cur.executescript("""
   DROP TABLE IF EXISTS amistats;
   CREATE TABLE amistats(email1 varchar(20), email2 varchar(20), estat estatsAmistats);

""")

con.commit()

#al inici sempre lleguirem els .txt
llegueix_usuaris()
llegueix_amistats()

while True:
    print"""
    1-afegir usuaris
    2-mostra usuaris
    3-mostra amistats
    4-acepta amistats
    5-rebutja amistats
    6-envia solicitud
    7-mes opcions d'usuaris
    8-sortir
    """
    op=input("Que vols fer?: ")
    print

    if op==1:
        afegeix_usuari()

    elif op==2:
        print
        print """
        1-nomes nom i cognom
        2-personalitzat
        """
        oper=input("que vols mostrar?Nomes nom i cognom o dades personalitzades")

        if oper==1:
            mostra_usuaris()
        elif oper==2:
            pass
    elif op==3:
        mostra_amistats()

    elif op==4:
        print "qui vols que sigui amic de qui"
        mostra_amistats()
        mail1=raw_input("email1: ")
        mail2=raw_input("email2: ")
        acepta_solicitud(mail1,mail2)

    elif op==5:
        print "qui vols que rebutji amistat"
        mostra_amistats()
        mail1=raw_input("email1: ")
        mail2=raw_input("email2: ")
        rebutja_solicitud(mail1,mail2)

    elif op==6:
        print "qui vols que envii amistat a qui"
        mostra_amistats()
        mail1=raw_input("email1: ")
        mail2=raw_input("email2: ")
        envia_solicitud(mail1,mail2)
    elif op==7:
        print
        print"""
        1-mostra amics del usuari
        2-canvia contrasenya
        3-canvia poblacio
        4-elimina l'usuari
        """
        oper=input("que vols fer: ")

        if oper==1:
            nom=raw_input("nom usuari: ")
            cognom=raw_input("cognom usuari: ")
            amics(nom,cognom)
    
        elif oper==2:
            mail=raw_input("mail usuari: ")
            old_pwd=raw_input("contrasenya antiga")
            nw_pwd=raw_input("contrasenya nova")
            chng_pwd(mail,old_pwd,nw_pwd)
            print "contrasenya canviada"
            print

            
        elif oper==3:
            mail=raw_input("mail usuari: ")
            nw_pb=raw_input("nova poblacio")
            chng_poblacio(mail,nw_pb)
            print "poblacio canviada"
            print 

        elif oper==4:
            mail=raw_input("mail del usuari a eliminar: ")
            elimina_usuari(mail)
            print "usuari eliminat"
            print
        
        elif oper==8:
            print "thats all folks!"
            break
